{"version":3,"sources":["getPublic.js","components/ThemeSwitcher.js","themes/defaultTheme.js","themes/darkTheme.js","components/CustomThemeProvider.js","NavBar.js","calculator.js","components/NumberInput.js","components/PaperItem.js","components/CalculatorInput.js","components/IconWithText.js","components/ChancesTable.js","components/CalculatorOutput.js","App.js","index.js"],"names":["getPublic","file","process","themes","defaultTheme","createMuiTheme","palette","primary","main","light","dark","secondary","background","default","type","overrides","darkTheme","CustomThemeContext","React","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","theme","getTheme","contextValue","name","setItem","Provider","value","ThemeProvider","useStyles","makeStyles","root","display","justifyContent","NavBar","classes","useContext","isDark","Boolean","AppBar","position","id","className","Toolbar","Icon","src","style","width","height","alt","Typography","variant","FormControlLabel","control","Switch","checked","onChange","event","target","label","rarities","calculate","goldFind","magicFind","grindTime","blobKingKillSeconds","willKillBosses","parseInt","currencyAmount","copper","silver","gold","chanceData","Common","chance","quality","tries","count","Uncommon","Rare","Epic","Legendary","sum","monstersSlain","normal","elites","bosses","total","min","max","avg","monsters","killTime","cooldown","findBoost","commonAvg","uncommonAvg","rareAvg","epicAvg","legendaryAvg","baseAmount","totalAmount","totalMF","Math","sin","floor","gridOutput","Object","entries","rarity","rarityData","indexOf","push","round","dropCount","NumberInput","TextField","PaperItem","Paper","padding","elevation","NumberInputItem","Grid","item","CalculatorInput","onSubmit","setState","preventDefault","container","alignItems","justify","direction","spacing","required","FormControl","component","FormGroup","Checkbox","color","labelPlacement","defaultValue","Button","marginTop","marginBottom","IconWithText","icon","tooltip","Tooltip","title","placement","fontFamily","OutputGrid","data","autoHeight","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","hideFooter","pageSize","columns","field","headerName","sortable","flex","description","rows","CalculatorOutput","calculatedData","paddingTop","paddingBottom","ceil","ChancesTable","App","state","margin","left","right","lg","md","sm","maxWidth","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f0eff1fc.chunk.js","sourcesContent":["const getPublic = (file) => `${process.env.PUBLIC_URL}/${file}`;\r\n\r\nexport default getPublic;\r\n","import defaultTheme from \"../themes/defaultTheme\";\r\nimport darkTheme from \"../themes/darkTheme\";\r\n\r\nconst themes = {\r\n    defaultTheme,\r\n    darkTheme,\r\n}\r\n\r\nexport default function getTheme(theme) {\r\n    return themes[theme];\r\n}","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#c51162\",\r\n            light: \"#fd558f\",\r\n            dark: \"#8e0038\"\r\n        },\r\n        secondary: {\r\n            main: \"#f06292\",\r\n            light: \"#ff94c2\",\r\n            dark: \"#ba2d65\"\r\n        },\r\n        background: {\r\n            default: \"#fff\",\r\n        },\r\n        type: \"light\"\r\n    },\r\n    overrides: {},\r\n});","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#3f51b5\",\r\n            light: \"#757de8\",\r\n            dark: \"#002984\",\r\n        },\r\n        secondary: {\r\n            main: \"#8c9eff\",\r\n            light: \"#c0cfff\",\r\n            dark: \"#5870cb\",\r\n        },\r\n        background: {\r\n            default: \"#232323\",\r\n        },\r\n        type: \"dark\"\r\n    },\r\n    overrides: {},\r\n});","import React, { useState } from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport getTheme from \"./ThemeSwitcher\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const CustomThemeContext = React.createContext(\r\n    {\r\n      currentTheme: 'defaultTheme',\r\n      setTheme: null,\r\n    },\r\n);\r\n  \r\nconst CustomThemeProvider = (props) => {\r\n    // eslint-disable-next-line react/prop-types\r\n    const { children } = props\r\n\r\n    // Read current theme from localStorage or maybe from an api\r\n    const currentTheme = localStorage.getItem('appTheme') || 'defaultTheme'\r\n\r\n    // State to hold the selected theme name\r\n    const [themeName, _setThemeName] = useState(currentTheme)\r\n\r\n    // Retrieve the theme object by theme name\r\n    const theme = getTheme(themeName)\r\n\r\n    // Wrap _setThemeName to store new theme names in localStorage\r\n    const setThemeName = (name) => {\r\n        localStorage.setItem('appTheme', name)\r\n        _setThemeName(name)\r\n    }\r\n\r\n    const contextValue = {\r\n        currentTheme: themeName,\r\n        setTheme: setThemeName,\r\n    }\r\n\r\n    return (\r\n        <CustomThemeContext.Provider value={contextValue}>\r\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n        </CustomThemeContext.Provider>\r\n    )\r\n}\r\n  \r\nexport default CustomThemeProvider","import React, { useContext } from 'react';\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n\tIcon,\r\n\tTypography,\r\n\tFormControlLabel,\r\n\tSwitch\r\n} from \"@material-ui/core\";\r\nimport getPublic from \"./getPublic\";\r\nimport { CustomThemeContext } from \"./components/CustomThemeProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: \"space-between\",\r\n        background: theme.palette.background,\r\n    },\r\n\r\n\r\n    /* May be useful ?\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },*/\r\n  }))\r\n\r\n\r\n\r\nexport default function NavBar() {\r\n    const classes = useStyles();\r\n    const { currentTheme, setTheme } = useContext(CustomThemeContext);\r\n    const isDark = Boolean(currentTheme === 'darkTheme');\r\n\r\n    const handleThemeChange = (event) => {\r\n        const { checked } = event.target\r\n        if (checked) {\r\n            setTheme('darkTheme')\r\n        } else {\r\n            setTheme('defaultTheme')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <AppBar position=\"static\" id=\"appbar\" className={{ root: classes.root }}>\r\n            <Toolbar>\r\n                <Icon>\r\n                    <img\r\n                        src={getPublic(\"favicon.ico\")}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                        alt=\"MeloBlox Calculator\"\r\n                    />\r\n                    {\" \"}\r\n                </Icon>\r\n                <Typography variant=\"h5\">\r\n                    MeloBlox Calculator\r\n                </Typography>\r\n                <FormControlLabel\r\n                    control={<Switch checked={isDark} onChange={handleThemeChange} />}\r\n                    label=\"Theme\"\r\n                />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","const rarities = [\"Common\", \"Uncommon\", \"Rare\", \"Epic\", \"Legendary\"];\r\n\r\nconst calculate = ({\r\n\tgoldFind,\r\n\tmagicFind,\r\n\tgrindTime,\r\n\tblobKingKillSeconds,\r\n\twillKillBosses = false,\r\n}) => {\r\n\r\n\tgoldFind = parseInt(goldFind);\r\n\tmagicFind = parseInt(magicFind);\r\n\tgrindTime = parseInt(grindTime);\r\n\tblobKingKillSeconds = parseInt(blobKingKillSeconds);\r\n\r\n\tconst currencyAmount = {\r\n\t\tcopper: 0,\r\n\t\tsilver: 0,\r\n\t\tgold: 0,\r\n\t};\r\n\tconst chanceData = {\r\n\t\tCommon: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 20,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tUncommon: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 49.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tRare: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 69.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tEpic: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 84.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tLegendary: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 95,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tsum: 0,\r\n\t};\r\n\tconst monstersSlain = {\r\n\t\tnormal: 0,\r\n\t\telites: 0,\r\n\t\tbosses: 0,\r\n\t\ttotal: 0,\r\n\t};\r\n\tconst gold = {\r\n\t\tmin: 1,\r\n\t\tmax: 8,\r\n\t\tavg: 0, //to be set\r\n\t};\r\n\r\n\t// TODO: Probs do XML ??\r\n\tconst monsters = {\r\n\t\tnormal: {\r\n\t\t\tkillTime: 5,\r\n\t\t\tcooldown: 2,\r\n\t\t\tfindBoost: 0,\r\n\t\t},\r\n\t\tboss: {\r\n\t\t\tkillTime: blobKingKillSeconds,\r\n\t\t\tcooldown: 300,\r\n\t\t\tfindBoost: 50,\r\n\t\t},\r\n\t};\r\n\r\n\tmonstersSlain.normal =\r\n\t\tgrindTime /\r\n\t\t((monsters.normal.killTime + monsters.normal.cooldown) / 60);\r\n\tif (willKillBosses) {\r\n\t\tmonstersSlain.bosses =\r\n\t\t\tgrindTime /\r\n\t\t\t((monsters.boss.killTime + monsters.boss.cooldown) / 60);\r\n\t}\r\n\tmonstersSlain.total =\r\n\t\tmonstersSlain.normal + monstersSlain.elites + monstersSlain.bosses;\r\n\r\n\tlet totalFindBoost = monsters.boss.findBoost; // Will add more\r\n\tlet totalBoostCount = monstersSlain.bosses;\r\n\tlet avgBoost = totalFindBoost * (totalBoostCount / grindTime);\r\n\r\n\tvar totalMF = magicFind + avgBoost; // Adding the avgBoost breaks it for some reason ;_;\r\n\r\n\tchanceData.Common.chance = 1;\r\n\tchanceData.Uncommon.chance = totalMF / 5 / 100;\r\n\tchanceData.Rare.chance = (totalMF / 10 / 100) * chanceData.Uncommon.chance;\r\n\tchanceData.Epic.chance = (totalMF / 18 / 100) * chanceData.Rare.chance;\r\n\tchanceData.Legendary.chance = (totalMF / 38 / 100) * chanceData.Epic.chance;\r\n\r\n\tchanceData.sum =\r\n\t\tchanceData.Common.chance +\r\n\t\tchanceData.Uncommon.chance +\r\n\t\tchanceData.Rare.chance +\r\n\t\tchanceData.Epic.chance +\r\n\t\tchanceData.Legendary.chance;\r\n\r\n\tchanceData.Common.chance /= chanceData.sum;\r\n\tchanceData.Uncommon.chance /= chanceData.sum;\r\n\tchanceData.Rare.chance /= chanceData.sum;\r\n\tchanceData.Epic.chance /= chanceData.sum;\r\n\tchanceData.Legendary.chance /= chanceData.sum;\r\n\r\n\tchanceData.Common.tries = 1 / chanceData.Common.chance;\r\n\tchanceData.Common.count = chanceData.Common.chance * monstersSlain.total;\r\n\r\n\tchanceData.Uncommon.tries = 1 / chanceData.Uncommon.chance;\r\n\tchanceData.Uncommon.count =\r\n\t\tchanceData.Uncommon.chance * monstersSlain.total;\r\n\r\n\tchanceData.Rare.tries = 1 / chanceData.Rare.chance;\r\n\tchanceData.Rare.count = chanceData.Rare.chance * monstersSlain.total;\r\n\r\n\tchanceData.Epic.tries = 1 / chanceData.Epic.chance;\r\n\tchanceData.Epic.count = chanceData.Epic.chance * monstersSlain.total;\r\n\r\n\tchanceData.Legendary.tries = 1 / chanceData.Legendary.chance;\r\n\tchanceData.Legendary.count =\r\n\t\tchanceData.Legendary.chance * monstersSlain.total;\r\n\r\n\tgold.avg = (gold.min + gold.max) / 2;\r\n\tlet commonAvg,\r\n\t\tuncommonAvg,\r\n\t\trareAvg,\r\n\t\tepicAvg,\r\n\t\tlegendaryAvg,\r\n\t\tbaseAmount,\r\n\t\ttotalAmount;\r\n\r\n\tcommonAvg =\r\n\t\tMath.sin(chanceData.Common.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Common.quality / 10)) +\r\n\t\tchanceData.Common.quality / 12 +\r\n\t\tgold.avg;\r\n\tuncommonAvg =\r\n\t\tMath.sin(chanceData.Uncommon.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Uncommon.quality / 10)) +\r\n\t\tchanceData.Uncommon.quality / 12 +\r\n\t\tgold.avg;\r\n\trareAvg =\r\n\t\tMath.sin(chanceData.Rare.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Rare.quality / 10)) +\r\n\t\tchanceData.Rare.quality / 12 +\r\n\t\tgold.avg;\r\n\tepicAvg =\r\n\t\tMath.sin(chanceData.Epic.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Epic.quality / 10)) +\r\n\t\tchanceData.Epic.quality / 12 +\r\n\t\tgold.avg;\r\n\tlegendaryAvg =\r\n\t\tMath.sin(chanceData.Legendary.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Legendary.quality / 10)) +\r\n\t\tchanceData.Legendary.quality / 12 +\r\n\t\tgold.avg;\r\n\r\n\tbaseAmount =\r\n\t\t(commonAvg * chanceData.Common.chance +\r\n\t\t\tuncommonAvg * chanceData.Uncommon.chance +\r\n\t\t\trareAvg * chanceData.Rare.chance +\r\n\t\t\tepicAvg * chanceData.Epic.chance +\r\n\t\t\tlegendaryAvg * chanceData.Legendary.chance) *\r\n\t\tmonstersSlain.total;\r\n\ttotalAmount = Math.floor((goldFind / 100) * baseAmount + baseAmount);\r\n\r\n\ttotalAmount = totalAmount / 10000;\r\n\tcurrencyAmount.gold = Math.floor(totalAmount);\r\n\ttotalAmount -= Math.floor(totalAmount);\r\n\ttotalAmount *= 100;\r\n\tcurrencyAmount.silver = Math.floor(totalAmount);\r\n\ttotalAmount -= Math.floor(totalAmount);\r\n\ttotalAmount *= 100;\r\n\tcurrencyAmount.copper = Math.floor(totalAmount);\r\n\r\n\tlet gridOutput = [];\r\n\tfor (const [rarity, rarityData] of Object.entries(chanceData)) {\r\n\t\tconst id = rarities.indexOf(rarity);\r\n\t\tif (id < 0) continue;\r\n\t\tgridOutput.push({\r\n\t\t\tid,\r\n\t\t\trarity,\r\n\t\t\tchance: Math.round(rarityData.chance * 10000) / 100 + \"%\",\r\n\t\t\ttries: Math.round(rarityData.tries),\r\n\t\t\tdropCount: Math.floor(rarityData.count),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tcurrencyAmount,\r\n\t\tgridOutput,\r\n\t\tmonstersSlain,\r\n\t};\r\n};\r\n\r\nexport default calculate;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\nfunction NumberInput(props) {\r\n\treturn <TextField type=\"number\" min={0} {...props} />;\r\n}\r\n\r\nexport default NumberInput;\r\n","import { Paper } from \"@material-ui/core\";\r\n\r\nconst PaperItem = (props) => {\r\n\treturn <Paper style={{ padding: 16 }} elevation={3} {...props} />;\r\n};\r\n\r\nexport default PaperItem;\r\n","import {\r\n\tButton,\r\n\tCheckbox,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormGroup,\r\n\tGrid,\r\n} from \"@material-ui/core\";\r\nimport NumberInput from \"./NumberInput\";\r\nimport PaperItem from \"./PaperItem\";\r\nimport { useState } from \"react\";\r\n\r\n// TODO: Output stuff from here instead of getting data from element ID\r\n\r\nconst NumberInputItem = (props) => {\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<NumberInput {...props} />\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst CalculatorInput = ({ onSubmit }) => {\r\n\tconst [willKillBosses, setState] = useState(false);\r\n\r\n\treturn (\r\n\t\t<PaperItem>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={(event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tconst target = event.target;\r\n\t\t\t\t\tif(willKillBosses) {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\tblobKingKillSeconds: target.blobKingKillSeconds.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\tspacing={0}\r\n\t\t\t\t\tstyle={{ padding: 8 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"goldFind\"\r\n\t\t\t\t\t\tlabel=\"Gold Find (%)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"magicFind\"\r\n\t\t\t\t\t\tlabel=\"Magic Find (%)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"grindTime\"\r\n\t\t\t\t\t\tlabel=\"Grinding duration (min)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tname=\"willKillBosses\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState(event.target.checked)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel=\"I will kill bosses\"\r\n\t\t\t\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t{willKillBosses && (\r\n\t\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\t\tname=\"blobKingKillSeconds\"\r\n\t\t\t\t\t\t\tlabel=\"Blob King kill time (s)\"\r\n\t\t\t\t\t\t\tdefaultValue={30}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\tmarginTop: 16,\r\n\t\t\t\t\t\t\t\tmarginBottom: 4,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCalculate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorInput;\r\n","import { Typography, Tooltip } from \"@material-ui/core\";\r\nimport getPublic from \"../getPublic\";\r\n\r\nfunction IconWithText({ icon, children, tooltip }) {\r\n\treturn (\r\n\t\t<Tooltip title={tooltip} placement=\"right\">\r\n\t\t\t<Typography\r\n\t\t\t\tstyle={{ display: \"inline-block\", fontFamily: \"Roboto\" }}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={getPublic(icon)}\r\n\t\t\t\t\talt={tooltip}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"1em\",\r\n\t\t\t\t\t\theight: \"1em\",\r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>{\" \"}\r\n\t\t\t\t{children}\r\n\t\t\t</Typography>\r\n\t\t</Tooltip>\r\n\t);\r\n}\r\n\r\nexport default IconWithText;\r\n","import { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nfunction OutputGrid({ data }) {\r\n\treturn (\r\n\t\t<DataGrid\r\n\t\t\tautoHeight={true}\r\n\t\t\tdisableColumnMenu={true}\r\n\t\t\tdisableColumnSelector={true}\r\n\t\t\tdisableSelectionOnClick={true}\r\n\t\t\thideFooter={true}\r\n\t\t\tpageSize={5}\r\n\t\t\tcolumns={[\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"rarity\",\r\n\t\t\t\t\theaderName: \"Rarity\",\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"chance\",\r\n\t\t\t\t\theaderName: \"Chance (%)\",\r\n\t\t\t\t\tdescription: \"The chance of finding an item of each rarity\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"tries\",\r\n\t\t\t\t\theaderName: \"Tries to drop\",\r\n\t\t\t\t\tdescription: \"Average tries for a drop of each rarity\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"dropCount\",\r\n\t\t\t\t\theaderName: \"Drop count\",\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\"How many drops of each rarity you'll get after grinding\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t\trows={data}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default OutputGrid;\r\n","import { Typography, Grid } from \"@material-ui/core\";\r\nimport IconWithText from \"./IconWithText\";\r\nimport ChancesTable from \"./ChancesTable\";\r\nimport PaperItem from \"./PaperItem\";\r\n\r\nconst CalculatorOutput = ({ calculatedData }) => {\r\n\treturn (\r\n\t\t<PaperItem>\r\n\t\t\t<Typography variant=\"h6\">Output</Typography>\r\n\t\t\t<Typography style={{ paddingTop: 8, paddingBottom: 16 }}>\r\n\t\t\t\t<b>Normal monsters slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.normal)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<b>Bosses slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.bosses)}\r\n\t\t\t</Typography>\r\n\t\t\t<ChancesTable data={calculatedData.gridOutput} />\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tstyle={{ padding: 8, paddingTop: 16 }}\r\n\t\t\t>\r\n\t\t\t\t<Typography>\r\n\t\t\t\t\t<b>You will earn:</b>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_gold.png\" tooltip=\"Gold\">\r\n\t\t\t\t\tGold: <b>{calculatedData.currencyAmount.gold}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_silver.png\" tooltip=\"Silver\">\r\n\t\t\t\t\tSilver: <b>{calculatedData.currencyAmount.silver}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_copper.png\" tooltip=\"Copper\">\r\n\t\t\t\t\tCopper: <b>{calculatedData.currencyAmount.copper}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t</Grid>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorOutput;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport calculate from \"./calculator\";\r\nimport CalculatorInput from \"./components/CalculatorInput\";\r\nimport CalculatorOutput from \"./components/CalculatorOutput\";\r\n\r\nfunction App() {\r\n\tconst [state, setState] = useState({\r\n\t\tgoldFind: 0,\r\n\t\tmagicFind: 0,\r\n\t\tgrindTime: 0,\r\n\t\tblobKingKillSeconds: 0,\r\n\t\twillKillBosses: false,\r\n\t});\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tsetState(data);\r\n\t};\r\n\r\n\tconst calculatedData = calculate(state);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"container\"\r\n\t\t\tstyle={{\r\n\t\t\t\tmargin: \"12px auto\",\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t<CalculatorInput onSubmit={onSubmit} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item md={7} sm style={{ maxWidth: \"1000px\" }}>\r\n\t\t\t\t\t<CalculatorOutput calculatedData={calculatedData} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport NavBar from \"./NavBar\";\r\nimport App from \"./App\";\r\nimport CustomThemeProvider from \"./components/CustomThemeProvider\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<CustomThemeProvider>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<NavBar />\r\n\t\t\t<App />\r\n\t\t</CustomThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}