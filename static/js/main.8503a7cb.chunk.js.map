{"version":3,"sources":["getPublic.js","components/ThemeSwitcher.js","themes/defaultTheme.js","themes/darkTheme.js","components/CustomThemeProvider.js","components/NavBar.js","services/calculator.js","components/NumberInput.js","components/PaperItem.js","components/CalculatorInput.js","components/IconWithText.js","components/ChancesTable.js","components/QuantityTable.js","components/CalculatorOutput.js","App.js","index.js"],"names":["getPublic","file","process","themes","defaultTheme","createMuiTheme","palette","primary","main","light","dark","secondary","background","default","contrastText","type","overrides","darkTheme","CustomThemeContext","React","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","theme","getTheme","contextValue","name","setItem","Provider","value","ThemeProvider","useStyles","makeStyles","root","mr8","marginRight","mr16","iconStyle","height","right","marginLeft","themeText","color","NavBar","classes","useContext","isDark","Boolean","AppBar","position","id","className","Toolbar","Grid","container","alignItems","direction","Icon","src","alt","Typography","variant","Link","to","FormControlLabel","control","Switch","checked","onChange","event","target","label","rarities","quantities","calculate","goldFind","magicFind","grindTime","blobKingKillSeconds","quantityFind","willKillBosses","parseInt","currencyAmount","copper","silver","gold","chanceData","Common","chance","quality","tries","count","Uncommon","Rare","Epic","Legendary","sum","quantityData","normalFlat","bossFlat","Zero","quantity","One","Two","Three","monstersSlain","normal","elites","bosses","total","min","max","avg","monsters","killTime","cooldown","findBoost","totalMF","commonAvg","uncommonAvg","rareAvg","epicAvg","legendaryAvg","baseAmount","totalAmount","normalFlatCount","bossesFlatCount","Math","sin","floor","chancesOutput","Object","entries","rarity","rarityData","indexOf","push","round","dropCount","quantitiesOutput","quanData","NumberInput","TextField","PaperItem","Paper","elevation","p8","padding","paper","submitButton","width","marginTop","marginBottom","p16","NumberInputItem","item","CalculatorInput","onSubmit","setState","preventDefault","justify","spacing","required","FormControl","component","FormGroup","Checkbox","labelPlacement","defaultValue","Button","IconWithText","icon","tooltip","Tooltip","title","placement","style","display","fontFamily","OutputGrid","data","autoHeight","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","hideFooter","pageSize","columns","field","headerName","sortable","flex","description","rows","pt16","paddingTop","mt8","CalculatorOutput","calculatedData","ceil","ChancesTable","QuantityTable","margin","App","state","lg","md","sm","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.8503a7cb.chunk.js","sourcesContent":["const getPublic = (file) => `${process.env.PUBLIC_URL}/${file}`;\r\n\r\nexport default getPublic;\r\n","import defaultTheme from \"../themes/defaultTheme\";\r\nimport darkTheme from \"../themes/darkTheme\";\r\n\r\nconst themes = {\r\n\tdefaultTheme,\r\n\tdarkTheme,\r\n};\r\n\r\nexport default function getTheme(theme) {\r\n\treturn themes[theme];\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#ec407a\",\r\n\t\t\tlight: \"#ff77a9\",\r\n\t\t\tdark: \"#b4004e\",\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#f06292\",\r\n\t\t\tlight: \"#ff94c2\",\r\n\t\t\tdark: \"#ba2d65\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: \"#ececec\",\r\n\t\t\tmain: \"#fff\",\r\n\t\t\tcontrastText: \"#fff\",\r\n\t\t},\r\n\t\ttype: \"light\",\r\n\t},\r\n\toverrides: {},\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#3f51b5\",\r\n\t\t\tlight: \"#757de8\",\r\n\t\t\tdark: \"#002984\",\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#5c6bc0\",\r\n\t\t\tlight: \"#8e99f3\",\r\n\t\t\tdark: \"#26418f\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: \"#1b1b1b\",\r\n\t\t\tmain: \"#333\",\r\n\t\t\tcontrastText: \"#fff\",\r\n\t\t},\r\n\t\ttype: \"dark\",\r\n\t},\r\n\toverrides: {},\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport getTheme from \"./ThemeSwitcher\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const CustomThemeContext = React.createContext({\r\n\tcurrentTheme: \"defaultTheme\",\r\n\tsetTheme: null,\r\n});\r\n\r\nconst CustomThemeProvider = (props) => {\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst { children } = props;\r\n\r\n\t// Read current theme from localStorage or maybe from an api\r\n\tconst currentTheme = localStorage.getItem(\"appTheme\") || \"defaultTheme\";\r\n\r\n\t// State to hold the selected theme name\r\n\tconst [themeName, _setThemeName] = useState(currentTheme);\r\n\r\n\t// Retrieve the theme object by theme name\r\n\tconst theme = getTheme(themeName);\r\n\r\n\t// Wrap _setThemeName to store new theme names in localStorage\r\n\tconst setThemeName = (name) => {\r\n\t\tlocalStorage.setItem(\"appTheme\", name);\r\n\t\t_setThemeName(name);\r\n\t};\r\n\r\n\tconst contextValue = {\r\n\t\tcurrentTheme: themeName,\r\n\t\tsetTheme: setThemeName,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CustomThemeContext.Provider value={contextValue}>\r\n\t\t\t<ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n\t\t</CustomThemeContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default CustomThemeProvider;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n\tIcon,\r\n\tTypography,\r\n\tFormControlLabel,\r\n\tSwitch,\r\n\tGrid,\r\n\tLink,\r\n} from \"@material-ui/core\";\r\nimport getPublic from \"../getPublic\";\r\nimport { CustomThemeContext } from \"./CustomThemeProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackground: theme.palette.background,\r\n\t},\r\n\tmr8: {\r\n\t\tmarginRight: 8,\r\n\t},\r\n\tmr16: {\r\n\t\tmarginRight: 16,\r\n\t},\r\n\ticonStyle: {\r\n\t\theight: \"100%\",\r\n\t},\r\n\tright: {\r\n\t\tmarginLeft: \"auto\",\r\n\t},\r\n\tthemeText: {\r\n\t\tcolor: theme.palette.background.contrastText,\r\n\t},\r\n\r\n\t/* May be useful ?\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },*/\r\n}));\r\n\r\nexport default function NavBar() {\r\n\tconst classes = useStyles();\r\n\tconst { currentTheme, setTheme } = useContext(CustomThemeContext);\r\n\tconst isDark = Boolean(currentTheme === \"darkTheme\");\r\n\r\n\tconst handleThemeChange = (event) => {\r\n\t\tconst { checked } = event.target;\r\n\t\tif (checked) {\r\n\t\t\tsetTheme(\"darkTheme\");\r\n\t\t} else {\r\n\t\t\tsetTheme(\"defaultTheme\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AppBar\r\n\t\t\tposition=\"static\"\r\n\t\t\tid=\"appbar\"\r\n\t\t\tclassName={{ root: classes.root }}\r\n\t\t>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Grid container alignItems=\"center\">\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<Grid container direction=\"row\">\r\n\t\t\t\t\t\t\t<Icon className={classes.mr8}>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={getPublic(\"favicon.ico\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconStyle}\r\n\t\t\t\t\t\t\t\t\talt=\"MeloBlox Calculator\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t<Typography variant=\"h5\" className={classes.mr16}>\r\n\t\t\t\t\t\t\t\tMeloBlox Calculator\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto=\"./AboutUs\"\r\n\t\t\t\t\t\t\t\tclassName={classes.mr16}\r\n\t\t\t\t\t\t\t\tcolor={classes.themeText}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">About Us</Typography>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid className={classes.right}>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isDark}\r\n\t\t\t\t\t\t\t\t\tonChange={handleThemeChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel={isDark ? \"Dark Theme\" : \"Light Theme\"}\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n","const rarities = [\"Common\", \"Uncommon\", \"Rare\", \"Epic\", \"Legendary\"];\r\nconst quantities = [\"Zero\", \"One\", \"Two\", \"Three\"];\r\n\r\n// Functions for each type of calc\r\n\r\nconst calculate = ({\r\n\tgoldFind,\r\n\tmagicFind,\r\n\tgrindTime,\r\n\tblobKingKillSeconds,\r\n\tquantityFind,\r\n\twillKillBosses = false,\r\n}) => {\r\n\t// Parsing the strings to int so I can count with them\r\n\tgoldFind = parseInt(goldFind);\r\n\tmagicFind = parseInt(magicFind);\r\n\tgrindTime = parseInt(grindTime);\r\n\tquantityFind = parseInt(quantityFind);\r\n\tblobKingKillSeconds = parseInt(blobKingKillSeconds);\r\n\r\n\t//#region Variables\r\n\tconst currencyAmount = {\r\n\t\tcopper: 0,\r\n\t\tsilver: 0,\r\n\t\tgold: 0,\r\n\t};\r\n\tconst chanceData = {\r\n\t\tCommon: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 20,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tUncommon: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 49.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tRare: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 69.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tEpic: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 84.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tLegendary: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 95,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tsum: 0,\r\n\t};\r\n\tconst quantityData = {\r\n\t\tnormalFlat: 90,\r\n\t\tbossFlat: 100,\r\n\t\tsum: 0,\r\n\t\tZero: {\r\n\t\t\tchance: 0,\r\n\t\t\tquantity: 0,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tOne: {\r\n\t\t\tchance: 0,\r\n\t\t\tquantity: 1,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tTwo: {\r\n\t\t\tchance: 0,\r\n\t\t\tquantity: 2,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tThree: {\r\n\t\t\tchance: 0,\r\n\t\t\tquantity: 3,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t};\r\n\tconst monstersSlain = {\r\n\t\tnormal: 0,\r\n\t\telites: 0,\r\n\t\tbosses: 0,\r\n\t\ttotal: 0,\r\n\t};\r\n\tconst gold = {\r\n\t\tmin: 1,\r\n\t\tmax: 8,\r\n\t\tavg: 0, //to be set\r\n\t};\r\n\r\n\t// TODO: Connect to JSON storage in \"/db/monstersDB.json\"\r\n\tconst monsters = {\r\n\t\tnormal: {\r\n\t\t\tkillTime: 5,\r\n\t\t\tcooldown: 2,\r\n\t\t\tfindBoost: 0,\r\n\t\t},\r\n\t\tboss: {\r\n\t\t\tkillTime: blobKingKillSeconds,\r\n\t\t\tcooldown: 300,\r\n\t\t\tfindBoost: 50,\r\n\t\t},\r\n\t};\r\n\t//#endregion\r\n\r\n\t//#region Monsters\r\n\tmonstersSlain.normal =\r\n\t\tgrindTime /\r\n\t\t((monsters.normal.killTime + monsters.normal.cooldown) / 60);\r\n\tif (willKillBosses) {\r\n\t\tmonstersSlain.bosses =\r\n\t\t\tgrindTime /\r\n\t\t\t((monsters.boss.killTime + monsters.boss.cooldown) / 60);\r\n\t}\r\n\tmonstersSlain.total =\r\n\t\tmonstersSlain.normal + monstersSlain.elites + monstersSlain.bosses;\r\n\t//#endregion\r\n\r\n\tlet totalFindBoost = monsters.boss.findBoost; // Will add more\r\n\tlet totalBoostCount = monstersSlain.bosses;\r\n\tlet avgBoost = totalFindBoost * (totalBoostCount / grindTime);\r\n\r\n\tvar totalMF = magicFind + avgBoost; // Adding the avgBoost breaks it for some reason ;_;\r\n\r\n\t//#region Chances\r\n\tchanceData.Common.chance = 1;\r\n\tchanceData.Uncommon.chance = totalMF / 5 / 100;\r\n\tchanceData.Rare.chance = (totalMF / 10 / 100) * chanceData.Uncommon.chance;\r\n\tchanceData.Epic.chance = (totalMF / 18 / 100) * chanceData.Rare.chance;\r\n\tchanceData.Legendary.chance = (totalMF / 38 / 100) * chanceData.Epic.chance;\r\n\r\n\tchanceData.sum =\r\n\t\tchanceData.Common.chance +\r\n\t\tchanceData.Uncommon.chance +\r\n\t\tchanceData.Rare.chance +\r\n\t\tchanceData.Epic.chance +\r\n\t\tchanceData.Legendary.chance;\r\n\r\n\tchanceData.Common.chance /= chanceData.sum;\r\n\tchanceData.Uncommon.chance /= chanceData.sum;\r\n\tchanceData.Rare.chance /= chanceData.sum;\r\n\tchanceData.Epic.chance /= chanceData.sum;\r\n\tchanceData.Legendary.chance /= chanceData.sum;\r\n\r\n\tchanceData.Common.tries = 1 / chanceData.Common.chance;\r\n\tchanceData.Common.count = chanceData.Common.chance * monstersSlain.total;\r\n\r\n\tchanceData.Uncommon.tries = 1 / chanceData.Uncommon.chance;\r\n\tchanceData.Uncommon.count =\r\n\t\tchanceData.Uncommon.chance * monstersSlain.total;\r\n\r\n\tchanceData.Rare.tries = 1 / chanceData.Rare.chance;\r\n\tchanceData.Rare.count = chanceData.Rare.chance * monstersSlain.total;\r\n\r\n\tchanceData.Epic.tries = 1 / chanceData.Epic.chance;\r\n\tchanceData.Epic.count = chanceData.Epic.chance * monstersSlain.total;\r\n\r\n\tchanceData.Legendary.tries = 1 / chanceData.Legendary.chance;\r\n\tchanceData.Legendary.count =\r\n\t\tchanceData.Legendary.chance * monstersSlain.total;\r\n\t//#endregion\r\n\r\n\t//#region Quantity\r\n\tlet normalFlatCount = quantityData.normalFlat * monstersSlain.normal;\r\n\tlet bossesFlatCount = 0;\r\n\tif (willKillBosses)\r\n\t\tbossesFlatCount = quantityData.bossFlat * monstersSlain.bosses;\r\n\r\n\t// sigh man... logic is to get an avg of the flat chance\r\n\tquantityData.Zero.chance =\r\n\t\t1 -\r\n\t\t(normalFlatCount + bossesFlatCount) /\r\n\t\t\t(monstersSlain.normal + monstersSlain.bosses) /\r\n\t\t\t100;\r\n\tquantityData.One.chance = quantityFind / 100;\r\n\tquantityData.Two.chance =\r\n\t\t(quantityFind / 6 / 100) * quantityData.One.chance;\r\n\tquantityData.Three.chance =\r\n\t\t(quantityFind / 13 / 100) * quantityData.One.chance;\r\n\r\n\tquantityData.sum =\r\n\t\tquantityData.Zero.chance +\r\n\t\tquantityData.One.chance +\r\n\t\tquantityData.Two.chance +\r\n\t\tquantityData.Three.chance;\r\n\r\n\tquantityData.Zero.chance /= quantityData.sum;\r\n\tquantityData.One.chance /= quantityData.sum;\r\n\tquantityData.Two.chance /= quantityData.sum;\r\n\tquantityData.Three.chance /= quantityData.sum;\r\n\r\n\tquantityData.Zero.tries = 1 / quantityData.Zero.chance;\r\n\tquantityData.Zero.count = quantityData.Zero.chance * monstersSlain.total;\r\n\r\n\tquantityData.One.tries = 1 / quantityData.One.chance;\r\n\tquantityData.One.count = quantityData.One.chance * monstersSlain.total;\r\n\r\n\tquantityData.Two.tries = 1 / quantityData.Two.chance;\r\n\tquantityData.Two.count = quantityData.Two.chance * monstersSlain.total;\r\n\r\n\tquantityData.Three.tries = 1 / quantityData.Three.chance;\r\n\tquantityData.Three.count = quantityData.Three.chance * monstersSlain.total;\r\n\t//#endregion\r\n\r\n\t//#region Currency\r\n\tgold.avg = (gold.min + gold.max) / 2;\r\n\tlet commonAvg,\r\n\t\tuncommonAvg,\r\n\t\trareAvg,\r\n\t\tepicAvg,\r\n\t\tlegendaryAvg,\r\n\t\tbaseAmount,\r\n\t\ttotalAmount;\r\n\r\n\tcommonAvg =\r\n\t\tMath.sin(chanceData.Common.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Common.quality / 10)) +\r\n\t\tchanceData.Common.quality / 12 +\r\n\t\tgold.avg;\r\n\tuncommonAvg =\r\n\t\tMath.sin(chanceData.Uncommon.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Uncommon.quality / 10)) +\r\n\t\tchanceData.Uncommon.quality / 12 +\r\n\t\tgold.avg;\r\n\trareAvg =\r\n\t\tMath.sin(chanceData.Rare.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Rare.quality / 10)) +\r\n\t\tchanceData.Rare.quality / 12 +\r\n\t\tgold.avg;\r\n\tepicAvg =\r\n\t\tMath.sin(chanceData.Epic.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Epic.quality / 10)) +\r\n\t\tchanceData.Epic.quality / 12 +\r\n\t\tgold.avg;\r\n\tlegendaryAvg =\r\n\t\tMath.sin(chanceData.Legendary.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Legendary.quality / 10)) +\r\n\t\tchanceData.Legendary.quality / 12 +\r\n\t\tgold.avg;\r\n\r\n\tbaseAmount =\r\n\t\t(commonAvg * chanceData.Common.chance +\r\n\t\t\tuncommonAvg * chanceData.Uncommon.chance +\r\n\t\t\trareAvg * chanceData.Rare.chance +\r\n\t\t\tepicAvg * chanceData.Epic.chance +\r\n\t\t\tlegendaryAvg * chanceData.Legendary.chance) *\r\n\t\tmonstersSlain.total;\r\n\ttotalAmount = Math.floor((goldFind / 100) * baseAmount + baseAmount);\r\n\r\n\ttotalAmount = totalAmount / 10000;\r\n\tcurrencyAmount.gold = Math.floor(totalAmount);\r\n\ttotalAmount -= Math.floor(totalAmount);\r\n\ttotalAmount *= 100;\r\n\tcurrencyAmount.silver = Math.floor(totalAmount);\r\n\ttotalAmount -= Math.floor(totalAmount);\r\n\ttotalAmount *= 100;\r\n\tcurrencyAmount.copper = Math.floor(totalAmount);\r\n\t//#endregion\r\n\r\n\tlet chancesOutput = [];\r\n\tfor (const [rarity, rarityData] of Object.entries(chanceData)) {\r\n\t\tconst id = rarities.indexOf(rarity);\r\n\t\tif (id < 0) continue;\r\n\t\tchancesOutput.push({\r\n\t\t\tid,\r\n\t\t\trarity,\r\n\t\t\tchance: Math.round(rarityData.chance * 10000) / 100 + \"%\",\r\n\t\t\ttries: Math.round(rarityData.tries),\r\n\t\t\tdropCount: Math.floor(rarityData.count),\r\n\t\t});\r\n\t}\r\n\r\n\tlet quantitiesOutput = [];\r\n\tfor (const [quantity, quanData] of Object.entries(quantityData)) {\r\n\t\tconst id = quantities.indexOf(quantity);\r\n\t\tif (id < 0) continue;\r\n\t\tquantitiesOutput.push({\r\n\t\t\tid,\r\n\t\t\tquantity,\r\n\t\t\tchance: Math.round(quanData.chance * 10000) / 100 + \"%\",\r\n\t\t\ttries: Math.round(quanData.tries),\r\n\t\t\tdropCount: Math.floor(quanData.count),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tcurrencyAmount,\r\n\t\tchancesOutput,\r\n\t\tquantitiesOutput,\r\n\t\tmonstersSlain,\r\n\t};\r\n};\r\n\r\nexport default calculate;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\nfunction NumberInput(props) {\r\n\treturn <TextField type=\"number\" min={0} {...props} />;\r\n}\r\n\r\nexport default NumberInput;\r\n","import { Paper } from \"@material-ui/core\";\r\n\r\nconst PaperItem = (props) => {\r\n\treturn <Paper elevation={3} {...props} />;\r\n};\r\n\r\nexport default PaperItem;\r\n","import {\r\n\tButton,\r\n\tCheckbox,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormGroup,\r\n\tGrid,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport NumberInput from \"./NumberInput\";\r\nimport PaperItem from \"./PaperItem\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// TODO: Output stuff from here instead of getting data from element ID\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tp8: {\r\n\t\tpadding: 8,\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: theme.palette.background.main,\r\n\t},\r\n\tsubmitButton: {\r\n\t\twidth: \"100%\",\r\n\t\tcolor: \"white\",\r\n\t\tmarginTop: 16,\r\n\t\tmarginBottom: 4,\r\n\t},\r\n\tp16: {\r\n\t\tpadding: 16,\r\n\t},\r\n}));\r\n\r\nconst NumberInputItem = (props) => {\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<NumberInput {...props} />\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst CalculatorInput = ({ onSubmit }) => {\r\n\tconst [willKillBosses, setState] = useState(false);\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<PaperItem className={`${classes.p8} ${classes.paper}`}>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={(event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tconst target = event.target;\r\n\t\t\t\t\tif (willKillBosses) {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tquantityFind: target.quantityFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\tblobKingKillSeconds:\r\n\t\t\t\t\t\t\t\ttarget.blobKingKillSeconds.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tquantityFind: target.quantityFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\tspacing={1}\r\n\t\t\t\t\tclassName={classes.p8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\tInsert your stats below\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"goldFind\"\r\n\t\t\t\t\t\tlabel=\"Gold Find (%)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"quantityFind\"\r\n\t\t\t\t\t\tlabel=\"Quantity Find (%)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"magicFind\"\r\n\t\t\t\t\t\tlabel=\"Magic Find (%)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"grindTime\"\r\n\t\t\t\t\t\tlabel=\"Grinding duration (min)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tname=\"willKillBosses\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState(event.target.checked)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel=\"I will kill bosses\"\r\n\t\t\t\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t{willKillBosses && (\r\n\t\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\t\tname=\"blobKingKillSeconds\"\r\n\t\t\t\t\t\t\tlabel=\"Blob King kill time (s)\"\r\n\t\t\t\t\t\t\tdefaultValue={30}\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCalculate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorInput;\r\n","import { Typography, Tooltip } from \"@material-ui/core\";\r\nimport getPublic from \"../getPublic\";\r\n\r\nfunction IconWithText({ icon, children, tooltip }) {\r\n\treturn (\r\n\t\t<Tooltip title={tooltip} placement=\"right\">\r\n\t\t\t<Typography\r\n\t\t\t\tstyle={{ display: \"inline-block\", fontFamily: \"Roboto\" }}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={getPublic(icon)}\r\n\t\t\t\t\talt={tooltip}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"1em\",\r\n\t\t\t\t\t\theight: \"1em\",\r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>{\" \"}\r\n\t\t\t\t{children}\r\n\t\t\t</Typography>\r\n\t\t</Tooltip>\r\n\t);\r\n}\r\n\r\nexport default IconWithText;\r\n","import { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nfunction OutputGrid({ data }) {\r\n\treturn (\r\n\t\t<DataGrid\r\n\t\t\tautoHeight={true}\r\n\t\t\tdisableColumnMenu={true}\r\n\t\t\tdisableColumnSelector={true}\r\n\t\t\tdisableSelectionOnClick={true}\r\n\t\t\thideFooter={true}\r\n\t\t\tpageSize={5}\r\n\t\t\tcolumns={[\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"rarity\",\r\n\t\t\t\t\theaderName: \"Rarity\",\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"chance\",\r\n\t\t\t\t\theaderName: \"Chance (%)\",\r\n\t\t\t\t\tdescription: \"The chance of finding an item of each rarity\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"tries\",\r\n\t\t\t\t\theaderName: \"Tries to drop\",\r\n\t\t\t\t\tdescription: \"Average tries for a drop of each rarity\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"dropCount\",\r\n\t\t\t\t\theaderName: \"Drop count\",\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\"How many drops of each rarity you'll get after grinding\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t\trows={data}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default OutputGrid;\r\n","import { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nfunction OutputGrid({ data }) {\r\n\treturn (\r\n\t\t<DataGrid\r\n\t\t\tautoHeight={true}\r\n\t\t\tdisableColumnMenu={true}\r\n\t\t\tdisableColumnSelector={true}\r\n\t\t\tdisableSelectionOnClick={true}\r\n\t\t\thideFooter={true}\r\n\t\t\tpageSize={5}\r\n\t\t\tcolumns={[\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"quantity\",\r\n\t\t\t\t\theaderName: \"Quantity\",\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"chance\",\r\n\t\t\t\t\theaderName: \"Chance (%)\",\r\n\t\t\t\t\tdescription: \"The chance of finding a quantity of items\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"tries\",\r\n\t\t\t\t\theaderName: \"Tries to drop\",\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\"Average tries for a drop the quantity of items\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"dropCount\",\r\n\t\t\t\t\theaderName: \"Drop count\",\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\"How many drops of each quantity you'll get after grinding\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t\trows={data}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default OutputGrid;\r\n","import { Typography, Grid } from \"@material-ui/core\";\r\nimport IconWithText from \"./IconWithText\";\r\nimport ChancesTable from \"./ChancesTable\";\r\nimport QuantityTable from \"./QuantityTable\";\r\nimport PaperItem from \"./PaperItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpt16: {\r\n\t\tpaddingTop: 16,\r\n\t},\r\n\tp8: {\r\n\t\tpadding: 8,\r\n\t},\r\n\tp16: {\r\n\t\tpadding: 16,\r\n\t},\r\n\tmt8: {\r\n\t\tmarginTop: 8,\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: theme.palette.background.main,\r\n\t},\r\n}));\r\n\r\nconst CalculatorOutput = ({ calculatedData }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<PaperItem className={`${classes.p16} ${classes.paper} `}>\r\n\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\tOutput\r\n\t\t\t\t<Typography variant=\"caption\" className={classes.p16}>\r\n\t\t\t\t\tQuantity Find % does not effect the Rarity Table\r\n\t\t\t\t</Typography>\r\n\t\t\t</Typography>\r\n\t\t\t<Typography className={`${classes.pt16} ${classes.p8}`}>\r\n\t\t\t\t<b>Normal monsters slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.normal)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<b>Bosses slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.bosses)}\r\n\t\t\t</Typography>\r\n\t\t\t<ChancesTable\r\n\t\t\t\tdata={calculatedData.chancesOutput}\r\n\t\t\t\tclassName={classes.mt8}\r\n\t\t\t/>\r\n\t\t\t<QuantityTable\r\n\t\t\t\tdata={calculatedData.quantitiesOutput}\r\n\t\t\t\tclassName={classes.mt8}\r\n\t\t\t/>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tclassName={`${classes.pt16} ${classes.p8}`}\r\n\t\t\t>\r\n\t\t\t\t<Typography>\r\n\t\t\t\t\t<b>You will earn:</b>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_gold.png\" tooltip=\"Gold\">\r\n\t\t\t\t\tGold: <b>{calculatedData.currencyAmount.gold}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_silver.png\" tooltip=\"Silver\">\r\n\t\t\t\t\tSilver: <b>{calculatedData.currencyAmount.silver}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_copper.png\" tooltip=\"Copper\">\r\n\t\t\t\t\tCopper: <b>{calculatedData.currencyAmount.copper}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t</Grid>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorOutput;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport calculate from \"./services/calculator\";\r\nimport CalculatorInput from \"./components/CalculatorInput\";\r\nimport CalculatorOutput from \"./components/CalculatorOutput\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tspacing: {\r\n\t\tmargin: 16,\r\n\t},\r\n}));\r\n\r\nfunction App() {\r\n\tconst [state, setState] = useState({\r\n\t\tgoldFind: 0,\r\n\t\tmagicFind: 0,\r\n\t\tquantityFind: 0,\r\n\t\tgrindTime: 0,\r\n\t\tblobKingKillSeconds: 0,\r\n\t\twillKillBosses: false,\r\n\t});\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tsetState(data);\r\n\t};\r\n\r\n\tconst calculatedData = calculate(state);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid item lg={2} className={classes.spacing}>\r\n\t\t\t\t<CalculatorInput onSubmit={onSubmit} />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item lg={5} md={7} sm className={classes.spacing}>\r\n\t\t\t\t<CalculatorOutput calculatedData={calculatedData} />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport App from \"./App\";\r\nimport CustomThemeProvider from \"./components/CustomThemeProvider\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<CustomThemeProvider>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<NavBar />\r\n\t\t\t<App />\r\n\t\t</CustomThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}