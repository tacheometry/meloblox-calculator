{"version":3,"sources":["getPublic.js","components/ThemeSwitcher.js","themes/defaultTheme.js","themes/darkTheme.js","components/CustomThemeProvider.js","components/NavBar.js","calculator.js","components/NumberInput.js","components/PaperItem.js","components/CalculatorInput.js","components/IconWithText.js","components/ChancesTable.js","components/CalculatorOutput.js","App.js","index.js"],"names":["getPublic","file","process","themes","defaultTheme","createMuiTheme","palette","primary","main","light","dark","secondary","background","default","type","overrides","darkTheme","CustomThemeContext","React","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","theme","getTheme","contextValue","name","setItem","Provider","value","ThemeProvider","useStyles","makeStyles","root","iconSpace","marginRight","iconStyle","height","right","marginLeft","NavBar","classes","useContext","isDark","Boolean","AppBar","position","id","className","Toolbar","Grid","container","alignItems","direction","Icon","src","alt","Typography","variant","FormControlLabel","control","Switch","checked","onChange","event","target","label","color","rarities","calculate","goldFind","magicFind","grindTime","blobKingKillSeconds","quantityFind","willKillBosses","parseInt","currencyAmount","copper","silver","gold","chanceData","Common","chance","quality","tries","count","Uncommon","Rare","Epic","Legendary","sum","quantity","flat","Zero","One","Two","Three","monstersSlain","normal","elites","bosses","total","min","max","avg","monsters","killTime","cooldown","findBoost","commonAvg","uncommonAvg","rareAvg","epicAvg","legendaryAvg","baseAmount","totalAmount","totalMF","Math","sin","floor","gridOutput","Object","entries","rarity","rarityData","indexOf","push","round","dropCount","NumberInput","TextField","PaperItem","Paper","elevation","p8","padding","submitButton","width","marginTop","marginBottom","p16","NumberInputItem","item","CalculatorInput","onSubmit","setState","preventDefault","justify","spacing","required","error","disabled","FormControl","component","FormGroup","Checkbox","labelPlacement","defaultValue","Button","IconWithText","icon","tooltip","Tooltip","title","placement","style","display","fontFamily","OutputGrid","data","autoHeight","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","hideFooter","pageSize","columns","field","headerName","sortable","flex","description","rows","output","paddingTop","CalculatorOutput","calculatedData","ceil","ChancesTable","margin","App","state","lg","md","sm","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.2e01251f.chunk.js","sourcesContent":["const getPublic = (file) => `${process.env.PUBLIC_URL}/${file}`;\r\n\r\nexport default getPublic;\r\n","import defaultTheme from \"../themes/defaultTheme\";\r\nimport darkTheme from \"../themes/darkTheme\";\r\n\r\nconst themes = {\r\n    defaultTheme,\r\n    darkTheme,\r\n}\r\n\r\nexport default function getTheme(theme) {\r\n    return themes[theme];\r\n}","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#ec407a\",\r\n            light: \"#ff77a9\",\r\n            dark: \"#b4004e\"\r\n        },\r\n        secondary: {\r\n            main: \"#f06292\",\r\n            light: \"#ff94c2\",\r\n            dark: \"#ba2d65\"\r\n        },\r\n        background: {\r\n            default: \"#ececec\",\r\n        },\r\n        type: \"light\"\r\n    },\r\n    overrides: {},\r\n});","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#3f51b5\",\r\n            light: \"#757de8\",\r\n            dark: \"#002984\",\r\n        },\r\n        secondary: {\r\n            main: \"#8c9eff\",\r\n            light: \"#c0cfff\",\r\n            dark: \"#5870cb\",\r\n        },\r\n        background: {\r\n            default: \"#232323\",\r\n        },\r\n        type: \"dark\"\r\n    },\r\n    overrides: {},\r\n});","import React, { useState } from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport getTheme from \"./ThemeSwitcher\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const CustomThemeContext = React.createContext(\r\n    {\r\n      currentTheme: 'defaultTheme',\r\n      setTheme: null,\r\n    },\r\n);\r\n  \r\nconst CustomThemeProvider = (props) => {\r\n    // eslint-disable-next-line react/prop-types\r\n    const { children } = props\r\n\r\n    // Read current theme from localStorage or maybe from an api\r\n    const currentTheme = localStorage.getItem('appTheme') || 'defaultTheme'\r\n\r\n    // State to hold the selected theme name\r\n    const [themeName, _setThemeName] = useState(currentTheme)\r\n\r\n    // Retrieve the theme object by theme name\r\n    const theme = getTheme(themeName)\r\n\r\n    // Wrap _setThemeName to store new theme names in localStorage\r\n    const setThemeName = (name) => {\r\n        localStorage.setItem('appTheme', name)\r\n        _setThemeName(name)\r\n    }\r\n\r\n    const contextValue = {\r\n        currentTheme: themeName,\r\n        setTheme: setThemeName,\r\n    }\r\n\r\n    return (\r\n        <CustomThemeContext.Provider value={contextValue}>\r\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n        </CustomThemeContext.Provider>\r\n    )\r\n}\r\n  \r\nexport default CustomThemeProvider","import React, { useContext } from 'react';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Icon,\r\n    Typography,\r\n    FormControlLabel,\r\n    Switch,\r\n    Grid\r\n} from \"@material-ui/core\";\r\nimport getPublic from \"../getPublic\";\r\nimport { CustomThemeContext } from \"./CustomThemeProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        background: theme.palette.background,\r\n    },\r\n    iconSpace: {\r\n        marginRight: 8,\r\n    },\r\n    iconStyle: {\r\n        height: \"100%\",\r\n    },\r\n    right: {\r\n        marginLeft: \"auto\",\r\n    }\r\n\r\n\r\n    /* May be useful ?\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },*/\r\n  }))\r\n\r\n\r\n\r\nexport default function NavBar() {\r\n    const classes = useStyles();\r\n    const { currentTheme, setTheme } = useContext(CustomThemeContext);\r\n    const isDark = Boolean(currentTheme === 'darkTheme');\r\n\r\n    const handleThemeChange = (event) => {\r\n        const { checked } = event.target\r\n        if (checked) {\r\n            setTheme('darkTheme')\r\n        } else {\r\n            setTheme('defaultTheme')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <AppBar position=\"static\" id=\"appbar\" className={{ root: classes.root }}>\r\n            <Toolbar>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Icon className={classes.iconSpace}>\r\n                                <img\r\n                                    src={getPublic(\"favicon.ico\")}\r\n                                    className={classes.iconStyle}\r\n                                    alt=\"MeloBlox Calculator\"\r\n                                />\r\n                            </Icon>\r\n                            <Typography variant=\"h5\">\r\n                                MeloBlox Calculator\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid className={classes.right}>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={isDark} onChange={handleThemeChange} />}\r\n                            label={isDark ? \"Dark Theme\" : \"Light Theme\"}\r\n                            color=\"secondary\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","const rarities = [\"Common\", \"Uncommon\", \"Rare\", \"Epic\", \"Legendary\"];\r\n\r\n// Functions for each type of calc\r\n\r\nconst calculate = ({\r\n    goldFind,\r\n    magicFind,\r\n    grindTime,\r\n    blobKingKillSeconds,\r\n    quantityFind,\r\n    willKillBosses = false,\r\n}) => {\r\n    goldFind = parseInt(goldFind);\r\n    magicFind = parseInt(magicFind);\r\n    grindTime = parseInt(grindTime);\r\n    quantityFind = parseInt(quantityFind);\r\n    blobKingKillSeconds = parseInt(blobKingKillSeconds);\r\n\r\n    const currencyAmount = {\r\n        copper: 0,\r\n        silver: 0,\r\n        gold: 0,\r\n    };\r\n    const chanceData = {\r\n        Common: {\r\n            chance: 0,\r\n            quality: 20,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        Uncommon: {\r\n            chance: 0,\r\n            quality: 49.5,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        Rare: {\r\n            chance: 0,\r\n            quality: 69.5,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        Epic: {\r\n            chance: 0,\r\n            quality: 84.5,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        Legendary: {\r\n            chance: 0,\r\n            quality: 95,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        sum: 0,\r\n    };\r\n    const quantity = {\r\n        flat: willKillBosses ? 100 : 90,\r\n        sum: 0,\r\n        Zero: {\r\n            chance: 0,\r\n            quantity: 0,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        One: {\r\n            chance: 0,\r\n            quantity: 1,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        Two: {\r\n            chance: 0,\r\n            quantity: 2,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n        Three: {\r\n            chance: 0,\r\n            quantity: 3,\r\n            tries: 0,\r\n            count: 0,\r\n        },\r\n    };\r\n    const monstersSlain = {\r\n        normal: 0,\r\n        elites: 0,\r\n        bosses: 0,\r\n        total: 0,\r\n    };\r\n    const gold = {\r\n        min: 1,\r\n        max: 8,\r\n        avg: 0, //to be set\r\n    };\r\n\r\n    // TODO: Probs do XML ??\r\n    const monsters = {\r\n        normal: {\r\n            killTime: 5,\r\n            cooldown: 2,\r\n            findBoost: 0,\r\n        },\r\n        boss: {\r\n            killTime: blobKingKillSeconds,\r\n            cooldown: 300,\r\n            findBoost: 50,\r\n        },\r\n    };\r\n\r\n    monstersSlain.normal =\r\n        grindTime /\r\n        ((monsters.normal.killTime + monsters.normal.cooldown) / 60);\r\n    if (willKillBosses) {\r\n        monstersSlain.bosses =\r\n            grindTime /\r\n            ((monsters.boss.killTime + monsters.boss.cooldown) / 60);\r\n    }\r\n    monstersSlain.total =\r\n        monstersSlain.normal + monstersSlain.elites + monstersSlain.bosses;\r\n\r\n    let totalFindBoost = monsters.boss.findBoost; // Will add more\r\n    let totalBoostCount = monstersSlain.bosses;\r\n    let avgBoost = totalFindBoost * (totalBoostCount / grindTime);\r\n\r\n    var totalMF = magicFind + avgBoost; // Adding the avgBoost breaks it for some reason ;_;\r\n\r\n\r\n\r\n    chanceData.Common.chance = 1;\r\n    chanceData.Uncommon.chance = totalMF / 5 / 100;\r\n    chanceData.Rare.chance = (totalMF / 10 / 100) * chanceData.Uncommon.chance;\r\n    chanceData.Epic.chance = (totalMF / 18 / 100) * chanceData.Rare.chance;\r\n    chanceData.Legendary.chance = (totalMF / 38 / 100) * chanceData.Epic.chance;\r\n\r\n    chanceData.sum =\r\n        chanceData.Common.chance +\r\n        chanceData.Uncommon.chance +\r\n        chanceData.Rare.chance +\r\n        chanceData.Epic.chance +\r\n        chanceData.Legendary.chance;\r\n\r\n    chanceData.Common.chance /= chanceData.sum;\r\n    chanceData.Uncommon.chance /= chanceData.sum;\r\n    chanceData.Rare.chance /= chanceData.sum;\r\n    chanceData.Epic.chance /= chanceData.sum;\r\n    chanceData.Legendary.chance /= chanceData.sum;\r\n\r\n    chanceData.Common.tries = 1 / chanceData.Common.chance;\r\n    chanceData.Common.count = chanceData.Common.chance * monstersSlain.total;\r\n\r\n    chanceData.Uncommon.tries = 1 / chanceData.Uncommon.chance;\r\n    chanceData.Uncommon.count = chanceData.Uncommon.chance * monstersSlain.total;\r\n\r\n    chanceData.Rare.tries = 1 / chanceData.Rare.chance;\r\n    chanceData.Rare.count = chanceData.Rare.chance * monstersSlain.total;\r\n\r\n    chanceData.Epic.tries = 1 / chanceData.Epic.chance;\r\n    chanceData.Epic.count = chanceData.Epic.chance * monstersSlain.total;\r\n\r\n    chanceData.Legendary.tries = 1 / chanceData.Legendary.chance;\r\n    chanceData.Legendary.count = chanceData.Legendary.chance * monstersSlain.total;\r\n\r\n\r\n\r\n    quantity.Zero.chance = 1;\r\n    quantity.One.chance = quantityFind / 100;\r\n    quantity.Two.chance = (quantityFind / 6 / 100) * quantity.One.chance;\r\n    quantity.Three.chance = (quantityFind / 6 / 100) * quantity.One.chance;\r\n\r\n    quantity.sum =\r\n        quantity.Zero.chance +\r\n        quantity.One.chance +\r\n        quantity.Two.chance +\r\n        quantity.Three.chance;\r\n\r\n    quantity.Zero.chance /= quantity.sum;\r\n    quantity.One.chance /= quantity.sum;\r\n    quantity.Two.chance /= quantity.sum;\r\n    quantity.Three.chance /= quantity.sum;\r\n\r\n    quantity.Zero.tries = 1 / quantity.Zero.chance;\r\n    quantity.Zero.count = quantity.Zero.chance * monstersSlain.total;\r\n\r\n    quantity.One.tries = 1 / quantity.One.chance;\r\n    quantity.One.count = quantity.One.chance * monstersSlain.total;\r\n\r\n    quantity.Two.tries = 1 / quantity.Two.chance;\r\n    quantity.Two.count = quantity.Two.chance * monstersSlain.total;\r\n\r\n    quantity.Three.tries = 1 / quantity.Three.chance;\r\n    quantity.Three.count = quantity.Three.chance * monstersSlain.total;\r\n\r\n\r\n\r\n    gold.avg = (gold.min + gold.max) / 2;\r\n    let commonAvg,\r\n        uncommonAvg,\r\n        rareAvg,\r\n        epicAvg,\r\n        legendaryAvg,\r\n        baseAmount,\r\n        totalAmount;\r\n\r\n    commonAvg =\r\n        Math.sin(chanceData.Common.quality / 512) *\r\n        (gold.avg * (chanceData.Common.quality / 10)) +\r\n        chanceData.Common.quality / 12 +\r\n        gold.avg;\r\n    uncommonAvg =\r\n        Math.sin(chanceData.Uncommon.quality / 512) *\r\n        (gold.avg * (chanceData.Uncommon.quality / 10)) +\r\n        chanceData.Uncommon.quality / 12 +\r\n        gold.avg;\r\n    rareAvg =\r\n        Math.sin(chanceData.Rare.quality / 512) *\r\n        (gold.avg * (chanceData.Rare.quality / 10)) +\r\n        chanceData.Rare.quality / 12 +\r\n        gold.avg;\r\n    epicAvg =\r\n        Math.sin(chanceData.Epic.quality / 512) *\r\n        (gold.avg * (chanceData.Epic.quality / 10)) +\r\n        chanceData.Epic.quality / 12 +\r\n        gold.avg;\r\n    legendaryAvg =\r\n        Math.sin(chanceData.Legendary.quality / 512) *\r\n        (gold.avg * (chanceData.Legendary.quality / 10)) +\r\n        chanceData.Legendary.quality / 12 +\r\n        gold.avg;\r\n\r\n    baseAmount =\r\n        (commonAvg * chanceData.Common.chance +\r\n            uncommonAvg * chanceData.Uncommon.chance +\r\n            rareAvg * chanceData.Rare.chance +\r\n            epicAvg * chanceData.Epic.chance +\r\n            legendaryAvg * chanceData.Legendary.chance) *\r\n        monstersSlain.total;\r\n    totalAmount = Math.floor((goldFind / 100) * baseAmount + baseAmount);\r\n\r\n    totalAmount = totalAmount / 10000;\r\n    currencyAmount.gold = Math.floor(totalAmount);\r\n    totalAmount -= Math.floor(totalAmount);\r\n    totalAmount *= 100;\r\n    currencyAmount.silver = Math.floor(totalAmount);\r\n    totalAmount -= Math.floor(totalAmount);\r\n    totalAmount *= 100;\r\n    currencyAmount.copper = Math.floor(totalAmount);\r\n\r\n    let gridOutput = [];\r\n    for (const [rarity, rarityData] of Object.entries(chanceData)) {\r\n        const id = rarities.indexOf(rarity);\r\n        if (id < 0) continue;\r\n        gridOutput.push({\r\n            id,\r\n            rarity,\r\n            chance: Math.round(rarityData.chance * 10000) / 100 + \"%\",\r\n            tries: Math.round(rarityData.tries),\r\n            dropCount: Math.floor(rarityData.count),\r\n        });\r\n    }\r\n\r\n    return {\r\n        currencyAmount,\r\n        gridOutput,\r\n        monstersSlain,\r\n    };\r\n};\r\n\r\nexport default calculate;","import { TextField } from \"@material-ui/core\";\r\n\r\nfunction NumberInput(props) {\r\n\treturn <TextField type=\"number\" min={0} {...props} />;\r\n}\r\n\r\nexport default NumberInput;\r\n","import { Paper } from \"@material-ui/core\";\r\n\r\nconst PaperItem = (props) => {\r\n\treturn <Paper elevation={3} {...props} />;\r\n};\r\n\r\nexport default PaperItem;\r\n","import {\r\n\tButton,\r\n\tCheckbox,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormGroup,\r\n\tGrid,\r\n\tTypography\r\n} from \"@material-ui/core\";\r\nimport NumberInput from \"./NumberInput\";\r\nimport PaperItem from \"./PaperItem\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// TODO: Output stuff from here instead of getting data from element ID\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tp8: {\r\n\t\tpadding: 8,\r\n\t},\r\n\tsubmitButton: {\r\n\t\twidth: \"100%\",\r\n\t\tcolor: \"white\",\r\n\t\tmarginTop: 16,\r\n\t\tmarginBottom: 4,\r\n\t},\r\n\tp16: {\r\n\t\tpadding: 16,\r\n\t}\r\n}));\r\n\r\nconst NumberInputItem = (props) => {\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<NumberInput {...props} />\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst CalculatorInput = ({ onSubmit }) => {\r\n\tconst [willKillBosses, setState] = useState(false);\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<PaperItem className={classes.p8}>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={(event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tconst target = event.target;\r\n\t\t\t\t\tif(willKillBosses) {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tquantityFind: target.quantityFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\tblobKingKillSeconds: target.blobKingKillSeconds.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tquantityFind: target.quantityFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\tspacing={0}\r\n\t\t\t\t\tclassName={classes.p8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography variant=\"h6\">Insert your stats below</Typography>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"goldFind\"\r\n\t\t\t\t\t\tlabel=\"Gold Find (%)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"quantityFind\"\r\n\t\t\t\t\t\t//label=\"Quantity Find (%)\"\r\n\t\t\t\t\t\tlabel=\"Not yet working!\"\r\n\t\t\t\t\t\terror={true}\r\n\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"magicFind\"\r\n\t\t\t\t\t\tlabel=\"Magic Find (%)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"grindTime\"\r\n\t\t\t\t\t\tlabel=\"Grinding duration (min)\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tname=\"willKillBosses\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState(event.target.checked)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel=\"I will kill bosses\"\r\n\t\t\t\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t{willKillBosses && (\r\n\t\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\t\tname=\"blobKingKillSeconds\"\r\n\t\t\t\t\t\t\tlabel=\"Blob King kill time (s)\"\r\n\t\t\t\t\t\t\tdefaultValue={30}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCalculate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorInput;\r\n","import { Typography, Tooltip } from \"@material-ui/core\";\r\nimport getPublic from \"../getPublic\";\r\n\r\nfunction IconWithText({ icon, children, tooltip }) {\r\n\treturn (\r\n\t\t<Tooltip title={tooltip} placement=\"right\">\r\n\t\t\t<Typography\r\n\t\t\t\tstyle={{ display: \"inline-block\", fontFamily: \"Roboto\" }}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={getPublic(icon)}\r\n\t\t\t\t\talt={tooltip}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"1em\",\r\n\t\t\t\t\t\theight: \"1em\",\r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>{\" \"}\r\n\t\t\t\t{children}\r\n\t\t\t</Typography>\r\n\t\t</Tooltip>\r\n\t);\r\n}\r\n\r\nexport default IconWithText;\r\n","import { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nfunction OutputGrid({ data }) {\r\n\treturn (\r\n\t\t<DataGrid\r\n\t\t\tautoHeight={true}\r\n\t\t\tdisableColumnMenu={true}\r\n\t\t\tdisableColumnSelector={true}\r\n\t\t\tdisableSelectionOnClick={true}\r\n\t\t\thideFooter={true}\r\n\t\t\tpageSize={5}\r\n\t\t\tcolumns={[\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"rarity\",\r\n\t\t\t\t\theaderName: \"Rarity\",\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"chance\",\r\n\t\t\t\t\theaderName: \"Chance (%)\",\r\n\t\t\t\t\tdescription: \"The chance of finding an item of each rarity\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"tries\",\r\n\t\t\t\t\theaderName: \"Tries to drop\",\r\n\t\t\t\t\tdescription: \"Average tries for a drop of each rarity\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"dropCount\",\r\n\t\t\t\t\theaderName: \"Drop count\",\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\"How many drops of each rarity you'll get after grinding\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t\trows={data}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default OutputGrid;\r\n","import { Typography, Grid } from \"@material-ui/core\";\r\nimport IconWithText from \"./IconWithText\";\r\nimport ChancesTable from \"./ChancesTable\";\r\nimport PaperItem from \"./PaperItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\toutput: {\r\n\t\tpadding: 8,\r\n\t\tpaddingTop: 16,\r\n\t},\r\n\tp16: {\r\n\t\tpadding: 16,\r\n\t}\r\n}));\r\n\r\nconst CalculatorOutput = ({ calculatedData }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<PaperItem className={classes.p16}>\r\n\t\t\t<Typography variant=\"h6\">Output</Typography>\r\n\t\t\t<Typography className={classes.output}>\r\n\t\t\t\t<b>Normal monsters slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.normal)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<b>Bosses slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.bosses)}\r\n\t\t\t</Typography>\r\n\t\t\t<ChancesTable data={calculatedData.gridOutput} />\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tclassName={classes.output}\r\n\t\t\t>\r\n\t\t\t\t<Typography>\r\n\t\t\t\t\t<b>You will earn:</b>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_gold.png\" tooltip=\"Gold\">\r\n\t\t\t\t\tGold: <b>{calculatedData.currencyAmount.gold}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_silver.png\" tooltip=\"Silver\">\r\n\t\t\t\t\tSilver: <b>{calculatedData.currencyAmount.silver}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_copper.png\" tooltip=\"Copper\">\r\n\t\t\t\t\tCopper: <b>{calculatedData.currencyAmount.copper}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t</Grid>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorOutput;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport calculate from \"./calculator\";\r\nimport CalculatorInput from \"./components/CalculatorInput\";\r\nimport CalculatorOutput from \"./components/CalculatorOutput\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tspacing: {\r\n\t\tmargin: 16\r\n\t}\r\n}));\r\n\r\nfunction App() {\r\n\tconst [state, setState] = useState({\r\n\t\tgoldFind: 0,\r\n\t\tmagicFind: 0,\r\n\t\tgrindTime: 0,\r\n\t\tblobKingKillSeconds: 0,\r\n\t\twillKillBosses: false,\r\n\t});\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tsetState(data);\r\n\t};\r\n\r\n\tconst calculatedData = calculate(state);\r\n\t\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid item lg={2} className={classes.spacing}>\r\n\t\t\t\t<CalculatorInput onSubmit={onSubmit} />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item lg={5} md={7} sm className={classes.spacing}>\r\n\t\t\t\t<CalculatorOutput calculatedData={calculatedData} />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport App from \"./App\";\r\nimport CustomThemeProvider from \"./components/CustomThemeProvider\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<CustomThemeProvider>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<NavBar />\r\n\t\t\t<App />\r\n\t\t</CustomThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}