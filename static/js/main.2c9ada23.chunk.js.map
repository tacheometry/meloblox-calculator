{"version":3,"sources":["calculator.js","components/NumberInput.js","components/PaperItem.js","components/CalculatorInput.js","getPublic.js","components/IconWithText.js","components/ChancesTable.js","components/CalculatorOutput.js","App.js","theme.js","index.js"],"names":["rarities","calculate","goldFind","magicFind","grindTime","blobKingKillSeconds","willKillBosses","currencyAmount","copper","silver","gold","chanceData","Common","chance","quality","tries","count","Uncommon","Rare","Epic","Legendary","sum","monstersSlain","normal","elites","bosses","total","min","max","avg","monsters","killTime","cooldown","findBoost","commonAvg","uncommonAvg","rareAvg","epicAvg","legendaryAvg","baseAmount","totalAmount","avgBoost","totalMF","parseInt","Math","sin","floor","gridOutput","Object","entries","rarity","rarityData","id","indexOf","push","round","dropCount","NumberInput","props","TextField","type","PaperItem","Paper","style","padding","elevation","NumberInputItem","Grid","item","CalculatorInput","onSubmit","useState","setState","event","preventDefault","target","value","container","alignItems","justify","direction","spacing","required","name","label","FormControl","component","FormGroup","FormControlLabel","control","Checkbox","onChange","checked","color","labelPlacement","defaultValue","Button","variant","width","marginTop","marginBottom","getPublic","file","process","IconWithText","icon","children","tooltip","Tooltip","title","placement","Typography","display","fontFamily","src","alt","height","OutputGrid","data","autoHeight","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","hideFooter","pageSize","columns","field","headerName","sortable","flex","description","rows","CalculatorOutput","calculatedData","paddingTop","paddingBottom","ceil","ChancesTable","App","state","className","margin","position","left","right","lg","md","sm","maxWidth","createMuiTheme","palette","primary","main","secondary","overrides","ReactDOM","render","StrictMode","ThemeProvider","theme","AppBar","Toolbar","Icon","document","getElementById"],"mappings":"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","file":"static/js/main.2c9ada23.chunk.js","sourcesContent":["const rarities = [\"Common\", \"Uncommon\", \"Rare\", \"Epic\", \"Legendary\"];\r\n\r\nconst calculate = ({\r\n\tgoldFind,\r\n\tmagicFind,\r\n\tgrindTime,\r\n\tblobKingKillSeconds,\r\n\twillKillBosses = false,\r\n}) => {\r\n\tconst currencyAmount = {\r\n\t\tcopper: 0,\r\n\t\tsilver: 0,\r\n\t\tgold: 0,\r\n\t};\r\n\tconst chanceData = {\r\n\t\tCommon: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 20,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tUncommon: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 49.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tRare: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 69.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tEpic: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 84.5,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tLegendary: {\r\n\t\t\tchance: 0,\r\n\t\t\tquality: 95,\r\n\t\t\ttries: 0,\r\n\t\t\tcount: 0,\r\n\t\t},\r\n\t\tsum: 0,\r\n\t};\r\n\tconst monstersSlain = {\r\n\t\tnormal: 0,\r\n\t\telites: 0,\r\n\t\tbosses: 0,\r\n\t\ttotal: 0,\r\n\t};\r\n\tconst gold = {\r\n\t\tmin: 1,\r\n\t\tmax: 8,\r\n\t\tavg: 0, //to be set\r\n\t};\r\n\r\n\t// TODO: Probs do XML ??\r\n\tconst monsters = {\r\n\t\tnormal: {\r\n\t\t\tkillTime: 5,\r\n\t\t\tcooldown: 2,\r\n\t\t\tfindBoost: 0,\r\n\t\t},\r\n\t\tboss: {\r\n\t\t\tkillTime: 0,\r\n\t\t\tcooldown: 300,\r\n\t\t\tfindBoost: 50,\r\n\t\t},\r\n\t};\r\n\r\n\tmonstersSlain.normal =\r\n\t\tgrindTime /\r\n\t\t((monsters.normal.killTime + monsters.normal.cooldown) / 60);\r\n\tif (willKillBosses) {\r\n\t\tmonstersSlain.bosses =\r\n\t\t\tgrindTime /\r\n\t\t\t((monsters.boss.killTime + monsters.boss.cooldown) / 60);\r\n\t}\r\n\tmonstersSlain.total =\r\n\t\tmonstersSlain.normal + monstersSlain.elites + monstersSlain.bosses;\r\n\r\n\tlet totalFindBoost = monsters.boss.findBoost; // Will add more\r\n\tlet totalBoostCount = monstersSlain.bosses;\r\n\tlet avgBoost = totalFindBoost * (totalBoostCount / grindTime);\r\n\r\n\tvar totalMF = parseInt(magicFind) + avgBoost; // Adding the avgBoost breaks it for some reason ;_;\r\n\r\n\tchanceData.Common.chance = 1;\r\n\tchanceData.Uncommon.chance = totalMF / 5 / 100;\r\n\tchanceData.Rare.chance = (totalMF / 10 / 100) * chanceData.Uncommon.chance;\r\n\tchanceData.Epic.chance = (totalMF / 18 / 100) * chanceData.Rare.chance;\r\n\tchanceData.Legendary.chance = (totalMF / 38 / 100) * chanceData.Epic.chance;\r\n\r\n\tchanceData.sum =\r\n\t\tchanceData.Common.chance +\r\n\t\tchanceData.Uncommon.chance +\r\n\t\tchanceData.Rare.chance +\r\n\t\tchanceData.Epic.chance +\r\n\t\tchanceData.Legendary.chance;\r\n\r\n\tchanceData.Common.chance /= chanceData.sum;\r\n\tchanceData.Uncommon.chance /= chanceData.sum;\r\n\tchanceData.Rare.chance /= chanceData.sum;\r\n\tchanceData.Epic.chance /= chanceData.sum;\r\n\tchanceData.Legendary.chance /= chanceData.sum;\r\n\r\n\tchanceData.Common.tries = 1 / chanceData.Common.chance;\r\n\tchanceData.Common.count = chanceData.Common.chance * monstersSlain.total;\r\n\r\n\tchanceData.Uncommon.tries = 1 / chanceData.Uncommon.chance;\r\n\tchanceData.Uncommon.count =\r\n\t\tchanceData.Uncommon.chance * monstersSlain.total;\r\n\r\n\tchanceData.Rare.tries = 1 / chanceData.Rare.chance;\r\n\tchanceData.Rare.count = chanceData.Rare.chance * monstersSlain.total;\r\n\r\n\tchanceData.Epic.tries = 1 / chanceData.Epic.chance;\r\n\tchanceData.Epic.count = chanceData.Epic.chance * monstersSlain.total;\r\n\r\n\tchanceData.Legendary.tries = 1 / chanceData.Legendary.chance;\r\n\tchanceData.Legendary.count =\r\n\t\tchanceData.Legendary.chance * monstersSlain.total;\r\n\r\n\tgold.avg = (gold.min + gold.max) / 2;\r\n\tlet commonAvg,\r\n\t\tuncommonAvg,\r\n\t\trareAvg,\r\n\t\tepicAvg,\r\n\t\tlegendaryAvg,\r\n\t\tbaseAmount,\r\n\t\ttotalAmount;\r\n\r\n\tcommonAvg =\r\n\t\tMath.sin(chanceData.Common.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Common.quality / 10)) +\r\n\t\tchanceData.Common.quality / 12 +\r\n\t\tgold.avg;\r\n\tuncommonAvg =\r\n\t\tMath.sin(chanceData.Uncommon.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Uncommon.quality / 10)) +\r\n\t\tchanceData.Uncommon.quality / 12 +\r\n\t\tgold.avg;\r\n\trareAvg =\r\n\t\tMath.sin(chanceData.Rare.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Rare.quality / 10)) +\r\n\t\tchanceData.Rare.quality / 12 +\r\n\t\tgold.avg;\r\n\tepicAvg =\r\n\t\tMath.sin(chanceData.Epic.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Epic.quality / 10)) +\r\n\t\tchanceData.Epic.quality / 12 +\r\n\t\tgold.avg;\r\n\tlegendaryAvg =\r\n\t\tMath.sin(chanceData.Legendary.quality / 512) *\r\n\t\t\t(gold.avg * (chanceData.Legendary.quality / 10)) +\r\n\t\tchanceData.Legendary.quality / 12 +\r\n\t\tgold.avg;\r\n\r\n\tbaseAmount =\r\n\t\t(commonAvg * chanceData.Common.chance +\r\n\t\t\tuncommonAvg * chanceData.Uncommon.chance +\r\n\t\t\trareAvg * chanceData.Rare.chance +\r\n\t\t\tepicAvg * chanceData.Epic.chance +\r\n\t\t\tlegendaryAvg * chanceData.Legendary.chance) *\r\n\t\tmonstersSlain.total;\r\n\ttotalAmount = Math.floor((goldFind / 100) * baseAmount + baseAmount);\r\n\r\n\ttotalAmount = totalAmount / 10000;\r\n\tcurrencyAmount.gold = Math.floor(totalAmount);\r\n\ttotalAmount -= Math.floor(totalAmount);\r\n\ttotalAmount *= 100;\r\n\tcurrencyAmount.silver = Math.floor(totalAmount);\r\n\ttotalAmount -= Math.floor(totalAmount);\r\n\ttotalAmount *= 100;\r\n\tcurrencyAmount.copper = Math.floor(totalAmount);\r\n\r\n\tlet gridOutput = [];\r\n\tfor (const [rarity, rarityData] of Object.entries(chanceData)) {\r\n\t\tconst id = rarities.indexOf(rarity);\r\n\t\tif (id < 0) continue;\r\n\t\tgridOutput.push({\r\n\t\t\tid,\r\n\t\t\trarity,\r\n\t\t\tchance: Math.round(rarityData.chance * 10000) / 100 + \"%\",\r\n\t\t\ttries: Math.round(rarityData.tries),\r\n\t\t\tdropCount: Math.floor(rarityData.count),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tcurrencyAmount,\r\n\t\tgridOutput,\r\n\t\tmonstersSlain,\r\n\t};\r\n};\r\n\r\nexport default calculate;\r\n","import { TextField } from \"@material-ui/core\";\n\nfunction NumberInput(props) {\n\treturn <TextField type=\"number\" min={0} {...props} />;\n}\n\nexport default NumberInput;\n","import { Paper } from \"@material-ui/core\";\r\n\r\nconst PaperItem = (props) => {\r\n\treturn <Paper style={{ padding: 16 }} elevation={3} {...props} />;\r\n};\r\n\r\nexport default PaperItem;\r\n","import {\r\n\tButton,\r\n\tCheckbox,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormGroup,\r\n\tGrid,\r\n} from \"@material-ui/core\";\r\nimport NumberInput from \"./NumberInput\";\r\nimport PaperItem from \"./PaperItem\";\r\nimport { useState } from \"react\";\r\n\r\n// TODO: Output stuff from here instead of getting data from element ID\r\n\r\nconst NumberInputItem = (props) => {\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<NumberInput {...props} />\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst CalculatorInput = ({ onSubmit }) => {\r\n\tconst [willKillBosses, setState] = useState(false);\r\n\r\n\treturn (\r\n\t\t<PaperItem>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={(event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tconst target = event.target;\r\n\t\t\t\t\tif(willKillBosses) {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\tblobKingKillSeconds: target.blobKingKillSeconds.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonSubmit({\r\n\t\t\t\t\t\t\tgoldFind: target.goldFind.value,\r\n\t\t\t\t\t\t\tmagicFind: target.magicFind.value,\r\n\t\t\t\t\t\t\tgrindTime: target.grindTime.value,\r\n\t\t\t\t\t\t\twillKillBosses,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\tspacing={0}\r\n\t\t\t\t\tstyle={{ padding: 8 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"goldFind\"\r\n\t\t\t\t\t\tlabel=\"Gold Find (%)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"magicFind\"\r\n\t\t\t\t\t\tlabel=\"Magic Find (%)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tname=\"grindTime\"\r\n\t\t\t\t\t\tlabel=\"Grinding duration (min)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tname=\"willKillBosses\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState(event.target.checked)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel=\"I will kill bosses\"\r\n\t\t\t\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t{willKillBosses && (\r\n\t\t\t\t\t\t<NumberInputItem\r\n\t\t\t\t\t\t\tname=\"blobKingKillSeconds\"\r\n\t\t\t\t\t\t\tlabel=\"Blob King kill time (s)\"\r\n\t\t\t\t\t\t\tdefaultValue={30}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\tmarginTop: 16,\r\n\t\t\t\t\t\t\t\tmarginBottom: 4,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCalculate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorInput;\r\n","const getPublic = (file) => `${process.env.PUBLIC_URL}/${file}`;\n\nexport default getPublic;\n","import { Typography, Tooltip } from \"@material-ui/core\";\r\nimport getPublic from \"../getPublic\";\r\n\r\nfunction IconWithText({ icon, children, tooltip }) {\r\n\treturn (\r\n\t\t<Tooltip title={tooltip} placement=\"right\">\r\n\t\t\t<Typography\r\n\t\t\t\tstyle={{ display: \"inline-block\", fontFamily: \"Roboto\" }}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={getPublic(icon)}\r\n\t\t\t\t\talt={tooltip}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"1em\",\r\n\t\t\t\t\t\theight: \"1em\",\r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>{\" \"}\r\n\t\t\t\t{children}\r\n\t\t\t</Typography>\r\n\t\t</Tooltip>\r\n\t);\r\n}\r\n\r\nexport default IconWithText;\r\n","import { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nfunction OutputGrid({ data }) {\r\n\treturn (\r\n\t\t<DataGrid\r\n\t\t\tautoHeight={true}\r\n\t\t\tdisableColumnMenu={true}\r\n\t\t\tdisableColumnSelector={true}\r\n\t\t\tdisableSelectionOnClick={true}\r\n\t\t\thideFooter={true}\r\n\t\t\tpageSize={5}\r\n\t\t\tcolumns={[\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"rarity\",\r\n\t\t\t\t\theaderName: \"Rarity\",\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"chance\",\r\n\t\t\t\t\theaderName: \"Chance (%)\",\r\n\t\t\t\t\tdescription: \"The chance of finding an item of each rarity\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"tries\",\r\n\t\t\t\t\theaderName: \"Tries to drop\",\r\n\t\t\t\t\tdescription: \"Average tries for a drop of each rarity\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"dropCount\",\r\n\t\t\t\t\theaderName: \"Drop count\",\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\"How many drops of each rarity you'll get after grinding\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\tflex: 0.25,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t\trows={data}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default OutputGrid;\r\n","import { Typography, Grid } from \"@material-ui/core\";\r\nimport IconWithText from \"./IconWithText\";\r\nimport ChancesTable from \"./ChancesTable\";\r\nimport PaperItem from \"./PaperItem\";\r\n\r\nconst CalculatorOutput = ({ calculatedData }) => {\r\n\treturn (\r\n\t\t<PaperItem>\r\n\t\t\t<Typography variant=\"h6\">Output</Typography>\r\n\t\t\t<Typography style={{ paddingTop: 8, paddingBottom: 16 }}>\r\n\t\t\t\t<b>Normal monsters slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.normal)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<b>Bosses slain:</b>{\" \"}\r\n\t\t\t\t{Math.ceil(calculatedData.monstersSlain.bosses)}\r\n\t\t\t</Typography>\r\n\t\t\t<ChancesTable data={calculatedData.gridOutput} />\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tstyle={{ padding: 8, paddingTop: 16 }}\r\n\t\t\t>\r\n\t\t\t\t<Typography>\r\n\t\t\t\t\t<b>You will earn:</b>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_gold.png\" tooltip=\"Gold\">\r\n\t\t\t\t\tGold: <b>{calculatedData.currencyAmount.gold}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_silver.png\" tooltip=\"Silver\">\r\n\t\t\t\t\tSilver: <b>{calculatedData.currencyAmount.silver}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t\t<IconWithText icon=\"icons/icon_copper.png\" tooltip=\"Copper\">\r\n\t\t\t\t\tCopper: <b>{calculatedData.currencyAmount.copper}</b>\r\n\t\t\t\t</IconWithText>\r\n\t\t\t</Grid>\r\n\t\t</PaperItem>\r\n\t);\r\n};\r\n\r\nexport default CalculatorOutput;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport calculate from \"./calculator\";\r\nimport CalculatorInput from \"./components/CalculatorInput\";\r\nimport CalculatorOutput from \"./components/CalculatorOutput\";\r\n\r\nfunction App() {\r\n\tconst [state, setState] = useState({\r\n\t\tgoldFind: 0,\r\n\t\tmagicFind: 0,\r\n\t\tgrindTime: 0,\r\n\t\tblobKingKillSeconds: 0,\r\n\t\twillKillBosses: false,\r\n\t});\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tsetState(data);\r\n\t};\r\n\r\n\tconst calculatedData = calculate(state);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"container\"\r\n\t\t\tstyle={{\r\n\t\t\t\tmargin: \"12px auto\",\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t<CalculatorInput onSubmit={onSubmit} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item md={7} sm style={{ maxWidth: \"1000px\" }}>\r\n\t\t\t\t\t<CalculatorOutput calculatedData={calculatedData} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport default createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: \"#fa77da\",\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#f7fefc\",\n\t\t},\n\t},\n\toverrides: {},\n});\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport theme from \"./theme\";\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n\tThemeProvider,\r\n\tIcon,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport getPublic from \"./getPublic\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<AppBar position=\"static\" id=\"appbar\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={getPublic(\"favicon.ico\")}\r\n\t\t\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}\r\n\t\t\t\t\t\t\talt=\"MeloBlox Calculator\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t</Icon>\r\n\t\t\t\t\t<Typography variant=\"h5\">MeloBlox Calculator</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<App />\r\n\t\t</ThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}